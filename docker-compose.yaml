version: "3.9"

services:
  db:
    image: postgres:16
    container_name: flash_app-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: FlAsh_R4nd0m_2025
      POSTGRES_DB: flash
    # ports:
    #   - "5432:5432"
    volumes:
      - flash_pg:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 20
    
    cpus: "1.00"           # cap at 1 CPU (good starting point)
    mem_limit: "1024m"     # hard cap 1 GiB
    mem_reservation: "512m"
    # (optional) enable useful PG logging/tuning inline:
    command: >
      postgres
      -c log_min_duration_statement=200ms
      -c shared_buffers=256MB
      -c work_mem=16MB
      -c maintenance_work_mem=128MB
      -c max_connections=100
      -c checkpoint_timeout=10min

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: unless-stopped
    environment:
      # Point to the 'db' service (same compose network)
      DATABASE_URL: postgresql+psycopg://${POSTGRES_USER:-flash_app}:${POSTGRES_PASSWORD:-pass}@db:5432/${POSTGRES_DB:-flash}
      DB_SCHEMA: ${DB_SCHEMA:-flash}
      RUN_DDL: ${RUN_DDL:-1}        # set 1 on first run to create tables, then 0
      SECRET_KEY: ${SECRET_KEY:-change-me}
      SF_PUBSUB_HOST: ${SF_PUBSUB_HOST:-api.pubsub.salesforce.com:7443}
    depends_on:
      db:
        condition: service_healthy
    # If you want to hit backend directly for debugging, uncomment:
    # ports:
    #   - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 2s
      retries: 20

    cpus: "1.50"        # cap at 1.5 CPUs
    mem_limit: "1024m"  # cap at 1 GiB
    mem_reservation: "512m"  # soft reservation (optional)

  web:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        # UI will call /api which is proxied to backend by nginx
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-/api}
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "8080:80"

volumes:
  flash_pg:
